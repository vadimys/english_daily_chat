const { Telegraf } = require('telegraf');
const { OpenAI } = require('openai');
const cron = require('node-cron');

const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

console.log('–ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç —ñ–∑ —Ç–æ–∫–µ–Ω–æ–º:', !!TELEGRAM_TOKEN, '—ñ OpenAI –∫–ª—é—á–µ–º:', !!OPENAI_API_KEY);

const bot = new Telegraf(TELEGRAM_TOKEN);
const openai = new OpenAI({ apiKey: OPENAI_API_KEY });

// –í–∫–∞–∂–∏ —Ç—É—Ç —Å–≤—ñ–π Telegram user ID
const userId = 367724841; // –ù–∞–ø—Ä–∏–∫–ª–∞–¥: const userId = 123456789;

// –õ–æ–≥ —Å—Ç–∞—Ä—Ç—É –±–æ—Ç–∞
console.log('–ë–æ—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ.');

// –í—ñ—Ç–∞–ª—å–Ω–∞ –∫–æ–º–∞–Ω–¥–∞
bot.start((ctx) => {
    console.log('/start –≤—ñ–¥', ctx.from.id);
    ctx.reply('üëã –ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –±–æ—Ç –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤. –ù–∞–ø–∏—à–∏ /words, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ª–æ–≤–∞.');
    // –¢–∏–º—á–∞—Å–æ–≤–æ ‚Äî –º–æ–∂–Ω–∞ –ø–æ–±–∞—á–∏—Ç–∏ userId:
    console.log('User ID:', ctx.from.id);
});

// /words
bot.command('words', async (ctx) => {
    console.log('/words –≤—ñ–¥', ctx.from.id);
    ctx.reply('‚è≥ –ì–µ–Ω–µ—Ä—É—é –¥–æ–±—ñ—Ä–∫—É —Å–ª—ñ–≤...');
    const prompt = `
  –ó–≥–µ–Ω–µ—Ä—É–π —Å–ø–∏—Å–æ–∫ —ñ–∑ 10 –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤ (Intermediate). –î–æ –∫–æ–∂–Ω–æ–≥–æ: –ø–µ—Ä–µ–∫–ª–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –ø—Ä–∏–∫–ª–∞–¥ —Ä–µ—á–µ–Ω–Ω—è, –∫–æ—Ä–æ—Ç–∫–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è. –§–æ—Ä–º–∞—Ç:
  1. —Å–ª–æ–≤–æ ‚Äì –ø–µ—Ä–µ–∫–ª–∞–¥
  Example: —Ä–µ—á–µ–Ω–Ω—è
  Motivation: –º–æ—Ç–∏–≤–∞—Ü—ñ—è
  `;
    try {
        const completion = await openai.chat.completions.create({
            model: "gpt-4o",
            messages: [{ role: "user", content: prompt }],
            max_tokens: 600,
        });
        const words = completion.choices[0].message.content;
        ctx.reply(words);
        console.log('–î–æ–±—ñ—Ä–∫—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É', ctx.from.id);
    } catch (e) {
        console.log('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ /words:', e);
        ctx.reply('‚ùó –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó: ' + (e.message || e));
    }
});

// Callback buttons
bot.on('callback_query', async (ctx) => {
    const data = ctx.callbackQuery.data;
    console.log('callback_query:', data, '–≤—ñ–¥', ctx.from.id);

    if (data === 'remind_again') {
        ctx.reply('üîÅ –ù–∞–¥—Å–∏–ª–∞—é –¥–æ–±—ñ—Ä–∫—É —â–µ —Ä–∞–∑...');
        const prompt = `
    –ó–≥–µ–Ω–µ—Ä—É–π —Å–ø–∏—Å–æ–∫ —ñ–∑ 10 –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤ (Intermediate). –î–æ –∫–æ–∂–Ω–æ–≥–æ: –ø–µ—Ä–µ–∫–ª–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –ø—Ä–∏–∫–ª–∞–¥ —Ä–µ—á–µ–Ω–Ω—è, –∫–æ—Ä–æ—Ç–∫–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è. –§–æ—Ä–º–∞—Ç:
    1. —Å–ª–æ–≤–æ ‚Äì –ø–µ—Ä–µ–∫–ª–∞–¥
    Example: —Ä–µ—á–µ–Ω–Ω—è
    Motivation: –º–æ—Ç–∏–≤–∞—Ü—ñ—è
    `;
        try {
            const completion = await openai.chat.completions.create({
                model: "gpt-4o",
                messages: [{ role: "user", content: prompt }],
                max_tokens: 600,
            });
            const words = completion.choices[0].message.content;
            ctx.reply(words);
            console.log('–î–æ–±—ñ—Ä–∫—É (remind_again) –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É', ctx.from.id);
        } catch (e) {
            console.log('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ remind_again:', e);
            ctx.reply('‚ùó –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—ñ: ' + (e.message || e));
        }
    }

    if (data === 'skip_today') {
        ctx.reply('‚è≠ –°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—î –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ.');
        console.log('–ü—Ä–æ–ø—É—Å–∫ –¥–Ω—è –¥–ª—è', ctx.from.id);
    }

    ctx.answerCbQuery();
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —â–æ–¥–µ–Ω–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞
cron.schedule('30 6 * * *', async () => {
    console.log('cron: –ó–∞–ø—É—Å–∫–∞—î–º–æ —â–æ–¥–µ–Ω–Ω—É –¥–æ–±—ñ—Ä–∫—É –¥–ª—è', userId);
    const prompt = `
    –ó–≥–µ–Ω–µ—Ä—É–π —Å–ø–∏—Å–æ–∫ —ñ–∑ 10 –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤ (Intermediate). –î–æ –∫–æ–∂–Ω–æ–≥–æ: –ø–µ—Ä–µ–∫–ª–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –ø—Ä–∏–∫–ª–∞–¥ —Ä–µ—á–µ–Ω–Ω—è, –∫–æ—Ä–æ—Ç–∫–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è. –§–æ—Ä–º–∞—Ç:
    1. —Å–ª–æ–≤–æ ‚Äì –ø–µ—Ä–µ–∫–ª–∞–¥
    Example: —Ä–µ—á–µ–Ω–Ω—è
    Motivation: –º–æ—Ç–∏–≤–∞—Ü—ñ—è
    `;
    try {
        const completion = await openai.chat.completions.create({
            model: "gpt-4o",
            messages: [{ role: "user", content: prompt }],
            max_tokens: 600,
        });
        const words = completion.choices[0].message.content;
        await bot.telegram.sendMessage(userId, `üóì –©–æ–¥–µ–Ω–Ω–∞ –¥–æ–±—ñ—Ä–∫–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤:\n\n${words}`);
        console.log('cron: –î–æ–±—ñ—Ä–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ');
    } catch (e) {
        await bot.telegram.sendMessage(userId, '‚ùó –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥–æ–±—ñ—Ä–∫–∏: ' + (e.message || e));
        console.log('cron: –ü–æ–º–∏–ª–∫–∞', e);
    }
});

bot.launch().then(() => {
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!');
});
