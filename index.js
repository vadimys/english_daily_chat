const { Telegraf } = require('telegraf');
const { OpenAI } = require('openai');
const cron = require('node-cron');

const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

const bot = new Telegraf(TELEGRAM_TOKEN);
const openai = new OpenAI({ apiKey: OPENAI_API_KEY });

// 1. –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π Telegram user ID
const userId = YOUR_TELEGRAM_USER_ID; // –ù–∞–ø—Ä–∏–∫–ª–∞–¥: const userId = 123456789;

// –í—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
bot.start((ctx) => {
    ctx.reply('üëã –ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –±–æ—Ç –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤. –ù–∞–ø–∏—à–∏ /words, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ª–æ–≤–∞.');
    // –¢–∏–º—á–∞—Å–æ–≤–æ ‚Äî –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —Å–≤—ñ–π ID:
    console.log('Your Telegram ID:', ctx.from.id);
});

// –†—É—á–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–±—ñ—Ä–∫–∏
bot.command('words', async (ctx) => {
    ctx.reply('‚è≥ –ì–µ–Ω–µ—Ä—É—é –¥–æ–±—ñ—Ä–∫—É —Å–ª—ñ–≤...');
    const prompt = `
  –ó–≥–µ–Ω–µ—Ä—É–π —Å–ø–∏—Å–æ–∫ —ñ–∑ 10 –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤ (Intermediate). –î–æ –∫–æ–∂–Ω–æ–≥–æ: –ø–µ—Ä–µ–∫–ª–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –ø—Ä–∏–∫–ª–∞–¥ —Ä–µ—á–µ–Ω–Ω—è, –∫–æ—Ä–æ—Ç–∫–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è. –§–æ—Ä–º–∞—Ç:
  1. —Å–ª–æ–≤–æ ‚Äì –ø–µ—Ä–µ–∫–ª–∞–¥
  Example: —Ä–µ—á–µ–Ω–Ω—è
  Motivation: –º–æ—Ç–∏–≤–∞—Ü—ñ—è
  `;
    try {
        const completion = await openai.chat.completions.create({
            model: "gpt-4o",
            messages: [{ role: "user", content: prompt }],
            max_tokens: 600,
        });
        const words = completion.choices[0].message.content;
        ctx.reply(words);
    } catch (e) {
        ctx.reply('‚ùó –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑.');
    }
});

// 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —â–æ–¥–µ–Ω–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–æ–±—ñ—Ä–∫–∏ –æ 8:30 (6:30 UTC)
cron.schedule('30 6 * * *', async () => {
    try {
        const prompt = `
    –ó–≥–µ–Ω–µ—Ä—É–π —Å–ø–∏—Å–æ–∫ —ñ–∑ 10 –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤ (Intermediate). –î–æ –∫–æ–∂–Ω–æ–≥–æ: –ø–µ—Ä–µ–∫–ª–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –ø—Ä–∏–∫–ª–∞–¥ —Ä–µ—á–µ–Ω–Ω—è, –∫–æ—Ä–æ—Ç–∫–∞ –º–æ—Ç–∏–≤–∞—Ü—ñ—è. –§–æ—Ä–º–∞—Ç:
    1. —Å–ª–æ–≤–æ ‚Äì –ø–µ—Ä–µ–∫–ª–∞–¥
    Example: —Ä–µ—á–µ–Ω–Ω—è
    Motivation: –º–æ—Ç–∏–≤–∞—Ü—ñ—è
    `;
        const completion = await openai.chat.completions.create({
            model: "gpt-4o",
            messages: [{ role: "user", content: prompt }],
            max_tokens: 600,
        });
        const words = completion.choices[0].message.content;
        await bot.telegram.sendMessage(userId, `üóì –©–æ–¥–µ–Ω–Ω–∞ –¥–æ–±—ñ—Ä–∫–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤:\n\n${words}`);
    } catch (e) {
        await bot.telegram.sendMessage(userId, '‚ùó –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥–æ–±—ñ—Ä–∫–∏.');
    }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ');
