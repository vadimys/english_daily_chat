const { getWordsFromGPT } = require('../gpt');
const { parseWords } = require('../utils/parser');
const { saveWordsToDB } = require('../db');
const { prompt, extraKeyboard } = require('../config');

module.exports = function(bot) {
    bot.on('callback_query', async (ctx) => {
        const data = ctx.callbackQuery.data;
        console.log('callback_query:', data, '–≤—ñ–¥', ctx.from.id);

        if (data === 'remind_again') {
            ctx.reply('üîÅ –ù–∞–¥—Å–∏–ª–∞—é –¥–æ–±—ñ—Ä–∫—É —â–µ —Ä–∞–∑...');
            try {
                const wordsText = await getWordsFromGPT(prompt);
                ctx.reply(wordsText, extraKeyboard);
                const wordsArray = parseWords(wordsText);
                saveWordsToDB(wordsArray);
            } catch (e) {
                ctx.reply('‚ùó –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—ñ: ' + (e.message || e));
            }
        }

        if (data === 'skip_today') {
            ctx.reply('‚è≠ –°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—î –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ.');
            console.log('–ü—Ä–æ–ø—É—Å–∫ –¥–Ω—è –¥–ª—è', ctx.from.id);
        }

        ctx.answerCbQuery();
    });
};
